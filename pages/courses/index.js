import Head from "next/head";
import Navbar from "../../componants/Navbar";
import { Button } from "@mantine/core";
import NewCourseModal from "../../componants/NewCourseModal";
import { useEffect, useState } from "react";
import CourseCard from "../../componants/CourseCard";
import axios from "axios";
import { Input } from "@mantine/core";
import { IconSquarePlus } from "@tabler/icons";

import { useRouter } from "next/router";

export default function Home(props) {
  const [opened, setOpened] = useState(false);
  const [courses, setCourses] = useState([]);
  const [isTeacher, setIsTeacher] = useState(false);
  const [joinCode, setJoinCode] = useState("");
  const router = useRouter();

  useEffect(() => {
    const user = JSON.parse(localStorage.getItem("user"));
    if (user) {
      if (user.isLoggedIn === undefined || user.isLoggedIn === false) {
        router.push("/auth");
      }
      if (user.role === "teacher") {
        setIsTeacher(true);
      } else {
        const f = async () => {
          try {
            const result = await axios.post("/api/studentsclass", {
              id: user._id,
            });
            setCourses(result.data.data);
          } catch (err) {
            console.log(err);
          }
        };
        f();
      }
    } else {
      router.push("/auth");
    }
  }, []);

  useEffect(() => {
    setCourses(props.courses);
  }, [props]);
  const joinClassRoom = async () => {
    try {
      const result = await axios.post("/api/courses/join", {
        code: joinCode,
      });
      if (result.status === 200) {
        setCourses([...courses, result.data]);
      }
    } catch (err) {
      console.log(err);
    }
  };

  return (
    <div
      style={{
        minWidth: "100vw",
        minHeight: "100vh",
        backgroundImage:
          "linear-gradient(135deg, rgba(186, 186, 186, 0.03) 0%, rgba(186, 186, 186, 0.03) 10%,rgba(133, 133, 133, 0.03) 10%, rgba(133, 133, 133, 0.03) 14%,rgba(38, 38, 38, 0.03) 14%, rgba(38, 38, 38, 0.03) 17%,rgba(93, 93, 93, 0.03) 17%, rgba(93, 93, 93, 0.03) 25%,rgba(80, 80, 80, 0.03) 25%, rgba(80, 80, 80, 0.03) 45%,rgba(239, 239, 239, 0.03) 45%, rgba(239, 239, 239, 0.03) 100%),linear-gradient(135deg, rgba(236, 236, 236, 0.03) 0%, rgba(236, 236, 236, 0.03) 47%,rgba(182, 182, 182, 0.03) 47%, rgba(182, 182, 182, 0.03) 63%,rgba(223, 223, 223, 0.03) 63%, rgba(223, 223, 223, 0.03) 81%,rgba(86, 86, 86, 0.03) 81%, rgba(86, 86, 86, 0.03) 89%,rgba(23, 23, 23, 0.03) 89%, rgba(23, 23, 23, 0.03) 90%,rgba(226, 226, 226, 0.03) 90%, rgba(226, 226, 226, 0.03) 100%),linear-gradient(45deg, rgba(52, 52, 52, 0.03) 0%, rgba(52, 52, 52, 0.03) 31%,rgba(246, 246, 246, 0.03) 31%, rgba(246, 246, 246, 0.03) 63%,rgba(188, 188, 188, 0.03) 63%, rgba(188, 188, 188, 0.03) 71%,rgba(15, 15, 15, 0.03) 71%, rgba(15, 15, 15, 0.03) 87%,rgba(127, 127, 127, 0.03) 87%, rgba(127, 127, 127, 0.03) 93%,rgba(234, 234, 234, 0.03) 93%, rgba(234, 234, 234, 0.03) 100%),linear-gradient(90deg, #ffffff,#ffffff)",
      }}
    >
      <Head>
        <title>Course - LabTastic</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar />
      <div style={{ marginLeft: 130 }}>
        {isTeacher && (
          <Button
            variant="gradient"
            gradient={{ from: "indigo", to: "cyan" }}
            onClick={() => {
              setOpened(true);
            }}
          >
            Add New Class
          </Button>
        )}
      </div>
      <div style={{ marginLeft: 130 }}>
        {!isTeacher && (
          <div
            style={{
              width: 500,
              display: "flex",
              flexDirection: "row",
              justifyContent: "space-between",
              marginTop: 20,
            }}
          >
            <Input
              icon={<IconSquarePlus />}
              placeholder="Add Your Code"
              size="md"
              onChange={(e) => {
                setJoinCode(e.target.value);
              }}
            />
            <Button
              variant="gradient"
              gradient={{ from: "indigo", to: "cyan" }}
              onClick={joinClassRoom}
            >
              Join New Class
            </Button>
          </div>
        )}
      </div>
      <NewCourseModal opened={opened} setOpened={setOpened} />
      <div
        style={{
          display: "flex",
          flexDirection: "row",
          flexWrap: "wrap",
          justifyContent: "center",
          alignItems: "center",
        }}
      >
        {courses.map((course) => (
          <CourseCard key={course._id} course={course} />
        ))}
      </div>
    </div>
  );
}

export async function getServerSideProps(context) {
  const data = await axios.get("http://localhost:3000/api/courses", {
    headers: {
      authToken: `${context.req.cookies.authToken}`,
    },
  });
  console.log(data.data);
  return {
    props: {
      courses: data.data.data,
    },
  };
}
